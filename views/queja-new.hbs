<input type="hidden" id="siglaID" value="{{sigla}}">
<div class="container">
    <div id="login" class="row justify-content-center">
        <div class="col-lg-7 ">
            <div class="col-12">
                <div class="form-outline mb-3">
                    <label class="form-label">Por medio de </label>
                    <div class="col-12" id="medioQuejasDiv">
                    </div>
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Nombre</label>
                    <input required type="text" class="form-control" id="nombre" name="nombre">
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Correo</label>
                    <input required type="text" class="form-control" id="correo" name="correo">
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Telefono</label>
                    <input required type="text" class="form-control" id="telefono" name="telefono">
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Oficina</label>
                    <input required type="text" class="form-control" id="oficina" name="oficina">
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Nombre del empleado</label>
                    <input required type="text" class="form-control" id="nombre_empleado" name="nombre_empleado">
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Detalle de la queja</label>
                    <input required type="text" class="form-control" id="detalle_queja" name="detalle_queja">
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Archivo</label>
                    <input class="form-control" type="file" id="fileArchivo"  name="fileArchivo">
                </div>
                <div class="form-outline mb-4">
                    <button class="btn btn-success" onclick="guardarValidacion()" type="button">Guardar</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    let jwt = localStorage.jwt;
    const header = new Headers();
    header.append('authorization', `Bearer ${jwt}`)
    header.append('Accept', `application/json`)
    header.append('Content-Type', `application/json`)

    document.addEventListener('DOMContentLoaded', async e => {
        await medioQuejas();
        document.getElementById('divnavbarSupporteMenu').style.display = 'block';
        document.getElementById('divnavbarSupportedContent').style.display = 'none';

    });

    medioQuejas = async () => {
        document.getElementById('medioQuejasDiv').innerHTML = '';
        const response = await fetch('/api/tipo_queja/obtenerOrigenQueja', {
            method:"GET",
            headers:header,
        }).then(res => res.json().then(data => ({status: res.status, body: data})));


        let statusCode = response.status;
        let body = response.body;
        let table = ``;

        if (statusCode == 200){
            let resultadoConsulta = body.resultadoConsulta;
            resultadoConsulta.forEach(e => {
                let id = e.Id_Origen;
                let descripcion = e.Descripcion_Origen;

                let html = `
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="checkOrigenQuejas" name="checkOrigenQuejas" value="${id}">
                        <label class="form-check-label" for="check">${descripcion}</label>
                    </div>
                `;
                document.getElementById('medioQuejasDiv').insertAdjacentHTML('beforeend', html);
            });

        }else{
            Swal.fire({
                icon: 'error',
                text: 'Hubo un error en obtener orignes quejas',
            });
        }
    }

    const convertBase64 = (file) => {
        return new Promise((resolve, reject) => {
            const fileReader = new FileReader();
            fileReader.readAsDataURL(file);

            fileReader.onload = () => {
                resolve(fileReader.result);
            };

            fileReader.onerror = (error) => {
                reject(error);
            };
        });
    };

    guardarValidacion = async () =>{

        let radios = document.querySelector('input[name = "checkOrigenQuejas"]:checked');
        let nombre = document.getElementById('nombre')
        let correo = document.getElementById('correo')
        let telefono = document.getElementById('telefono')
        let oficina = document.getElementById('oficina')
        let nombre_empleado = document.getElementById('nombre_empleado')
        let detalle_queja = document.getElementById('detalle_queja')
        let fileArchivo = document.getElementById('fileArchivo')
        let siglaID = document.getElementById('siglaID');


        if (radios == null){
            Swal.fire({
                icon: 'error',
                text: 'Seleccione origen queja',
            });
            return
        }

        if (nombre.value == ''){
            Swal.fire({
                icon: 'error',
                text: 'Ingrese un nombre',
            });
            return
        }

        if (correo.value == ''){
            Swal.fire({
                icon: 'error',
                text: 'Ingrese correo',
            });
            return
        }

        if (telefono.value == ''){
            Swal.fire({
                icon: 'error',
                text: 'Ingrese telefono',
            });
            return
        }

        if (oficina.value == ''){
            Swal.fire({
                icon: 'error',
                text: 'Seleccione oficina',
            });
            return
        }

        if (nombre_empleado.value == ''){
            Swal.fire({
                icon: 'error',
                text: 'Ingrese nombre empleado',
            });
            return
        }

        if (detalle_queja.value == ''){
            Swal.fire({
                icon: 'error',
                text: 'Ingrese detalle queja',
            });
            return
        }

        if (fileArchivo.value == ''){
            Swal.fire({
                icon: 'error',
                text: 'Seleccione un archivo',
            });
            return
        }

        const file = fileArchivo.files[0];
        const header = new Headers();
        header.append('authorization', `Bearer ${jwt}`)

        var data = new FormData()
        data.append('Nombres', nombre.value)
        data.append('Apellidos', "")
        data.append('Correo_email', correo.value)
        data.append('Telefono', telefono.value)
        data.append('Detalle', detalle_queja.value)
        data.append('Id_TQueja', siglaID.value)
        data.append('Id_Origen', radios.value)
        data.append('File', file)
        const response = await fetch('/api/ingreso/ingresarQueja', {
            method:"POST",
            headers: header,
            body: data,
        }).then(res => res.json().then(data => ({status: res.status, body: data})));
        let statusCode = response.status;
        let body = response.body;

        if (statusCode == 201){
            Swal.fire({
                icon: 'success',
                text: 'Agradecemos su comunicaci√≥n, le informamos que su queja ha sido recibida exitosamente. Para el seguimiento o cualquier consulta relacionada, no olvide revisar su correo',
                allowOutsideClick: false
            }).then(function(isConfirm) {
                if (isConfirm) {
                    window.location = `/queja?sigla=${siglaID.value}`
                }
            })
        }else{
            Swal.fire({
                icon: 'error',
                text: 'Hubo un error en guardar los datos',
                allowOutsideClick: false
            });
        }
    }
</script>