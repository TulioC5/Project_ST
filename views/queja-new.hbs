<input type="hidden" value="{{sigla}}">
<div class="container">
    <div id="login" class="row justify-content-center" method="POST">
        <div class="col-lg-7 ">
            <div class="col-12">
                <div class="form-outline mb-3">
                    <label class="form-label">Por medio de </label>
                    <div class="col-1">
                        <input type="checkbox" class="form-check" name="" id="">
                    </div>
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Nombre</label>
                    <input required type="text" class="form-control" id="descripcion" name="descripcion">
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Correo</label>
                    <input required type="text" class="form-control" id="descripcion" name="descripcion">
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Telefono</label>
                    <input required type="text" class="form-control" id="descripcion" name="descripcion">
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Oficina</label>
                    <input required type="text" class="form-control" id="descripcion" name="descripcion">
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Nombre del empleado</label>
                    <input required type="text" class="form-control" id="descripcion" name="descripcion">
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Detalle de la queja</label>
                    <input required type="text" class="form-control" id="descripcion" name="descripcion">
                </div>
                <div class="form-outline mb-3">
                    <label class="form-label">Archivo</label>
                    <input class="form-control" type="file">
                </div>
                <div class="form-outline mb-4">
                    <button class="btn btn-success" type="button">Guardar</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    let jwt = localStorage.jwt;
    const header = new Headers();
    header.append('authorization', `Bearer ${jwt}`)
    header.append('Accept', `application/json`)
    header.append('Content-Type', `application/json`)

    document.addEventListener('DOMContentLoaded', async e => {
        await region();
        document.getElementById('divnavbarSupporteMenu').style.display = 'block';
        document.getElementById('divnavbarSupportedContent').style.display = 'none';

    });

    region = async () => {

        const response = await fetch('/api/regiones/obtenerRegiones', {
            method:"GET",
            headers:header,
        }).then(res => res.json().then(data => ({status: res.status, body: data})));


        let statusCode = response.status;
        let body = response.body;
        let table = ``;

        if (statusCode == 200){
            let resultadoConsulta = body.resultadoConsulta;
            let selectInput = document.getElementById('region');
            resultadoConsulta.forEach(e => {
                let id_region = e.Id_Region;
                let descripcion = e.Descripcion;
                let id = id_region;
                let name = descripcion;
                let opt = document.createElement('option');
                opt.value = id;
                opt.innerHTML = name;
                selectInput.appendChild(opt);

            });

        }else{
            Swal.fire({
                icon: 'error',
                text: 'Hubo un error en obtener listado',
            });
        }
    }

    guardarValidacion = async () =>{
        let region =  document.getElementById('region').value;
        let descripcion = document.getElementById('descripcion').value;

        if (region == ''){
            Swal.fire({
                icon: 'error',
                text: 'Seleccione region',
            });
            return
        }

        if (descripcion == ''){
            Swal.fire({
                icon: 'error',
                text: 'Ingrese descripcion',
            });
            return
        }

        data = JSON.stringify({
            Descripcion : descripcion,
            Id_Region: region,
        })

        const response = await fetch('/api/punto_atencion/agregarPunto', {
            method:"POST",
            headers:header,
            body: data,
        }).then(res => res.json().then(data => ({status: res.status, body: data})));
        let statusCode = response.status;
        let body = response.body;

        if (statusCode == 201){
            Swal.fire({
                icon: 'success',
                text: 'Dato guardado',
                allowOutsideClick: false
            }).then(function(isConfirm) {
                if (isConfirm) {
                    window.location = '/puntoatencion'
                }
            })
        }else{
            Swal.fire({
                icon: 'error',
                text: 'Hubo un error en guardar los datos',
                allowOutsideClick: false
            });
        }
    }
</script>